{"version":3,"sources":["Context/ThemeContext.js","component/ThemeToggler.js","component/Header.js","Color.js","component/Her.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeToggler","useContext","themeMode","setThemeMode","onClick","Header","AppTheme","light","textColor","backgroundColor","border","dark","Her","theme","currentTheme","style","padding","color","textAlign","fontSize","App","themeHook","useState","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAGiBA,G,KAFMC,wBAAe,CAAC,QAAU,gB,cCkBlCC,EAhBM,WACjB,MAAiCC,qBAAWH,GAA5C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEA,OACI,qBACAC,QAAS,WACLD,EAA0B,UAAbD,EAAuB,OAAO,UAF/C,SAMI,+BAAoB,UAAZA,EAAsB,OAAO,aCIlCG,EAdD,WACd,OACI,iCACI,6BACG,oDCKIC,EAZC,CACZC,MAAM,CACFC,UAAW,OACXC,gBAAiB,OACjBC,OAAO,mBAEXC,KAAK,CACDH,UAAW,OACXC,gBAAiB,OACjBC,OAAO,mBCsCCE,EAxCH,WACR,IAAMC,EAAOZ,qBAAYH,GAAc,GACjCgB,EAAcR,EAASO,GAC7B,OACI,sBACAE,MAAO,CACHC,QAAQ,OACRP,gBAAe,UAAMK,EAAaL,iBAClCQ,MAAM,GAAD,OAAIH,EAAaN,WACtBU,UAAW,UALf,UAOI,+CACA,+CAGA,wBAAQH,MAAO,CACXN,gBAAkB,UAClBO,QAAS,aACTG,SAAS,OACTF,MAAM,QACNP,OAAO,GAAD,OAAII,EAAaJ,SAL3B,SAOI,cAAC,EAAD,UCXFU,EAZJ,WACT,IAAMC,EAAWC,mBAAS,SAC1B,OACE,cAAC,EAAaC,SAAd,CAAuBC,MAAOH,EAA9B,SACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,UCAOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bbfcd97c.chunk.js","sourcesContent":["import {createContext} from \"react\";\r\n  const ThemeContext = createContext ([\"light\" , ()=> {}])\r\n\r\n  export default ThemeContext;","import React ,{useContext} from \"react\"\r\nimport ThemeContext from \"../Context/ThemeContext\"\r\n\r\nconst ThemeToggler = () => {\r\n    const [themeMode, setThemeMode]= useContext(ThemeContext)\r\n    \r\n    return(\r\n        <div\r\n        onClick={() => {\r\n            setThemeMode(themeMode ===\"light\" ? \"dark\":\"light\")\r\n        }}\r\n        \r\n        >\r\n            <span >{themeMode===\"light\" ? \"DARK\":\"LIGHT\"}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ThemeToggler;","import React from \"react\";\r\nimport ThemeToggler from \"./ThemeToggler\"\r\n\r\nconst Header =() => {\r\nreturn(\r\n    <header>\r\n        <h1>\r\n           <i>theme switcher</i> \r\n        </h1>\r\n        {/* <ThemeToggler/> */}\r\n    </header>\r\n)\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;","const AppTheme ={\r\n    light:{\r\n        textColor :\"#000\",\r\n        backgroundColor: \"#fff\",\r\n        border:\" 5px solid #000\"\r\n    },\r\n    dark:{ \r\n        textColor: \"#fff\",\r\n        backgroundColor: \"#333\",\r\n        border:\"5px solid #000\"\r\n    }\r\n};\r\nexport default AppTheme;","import React ,{useContext} from \"react\";\r\nimport ThemeContext from \"../Context/ThemeContext\"\r\nimport AppTheme from \"../Color\"\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\n\r\n\r\n const Her = () => {\r\n     const theme =useContext (ThemeContext)[0]\r\n     const currentTheme =AppTheme[theme]\r\n     return(\r\n         <div\r\n         style={{\r\n             padding:\"lrem\",\r\n             backgroundColor : `${currentTheme.backgroundColor}`,\r\n             color:`${currentTheme.textColor}`,\r\n             textAlign :\"center\"\r\n         }}>\r\n             <h1>theme toggler</h1>\r\n             <p>haha i did 255 \r\n\r\n             </p>\r\n             <button style={{\r\n                 backgroundColor : \"#26ae60\",\r\n                 padding: \"10px 150px\",\r\n                 fontSize:\"20px\",\r\n                 color:\" #fff\",\r\n                 border:`${currentTheme.border}`\r\n             }}>\r\n                 <ThemeToggler/>\r\n                 </button>\r\n\r\n             {/* <button style={{\r\n                 backgroundColor : \"#26ae60\",\r\n                 padding: \"10px 150px\",\r\n                 fontSize:\"20px\",\r\n                 color:\" #fff\",\r\n                 border:`${currentTheme.border}`\r\n             }}>\r\n                 click me\r\n             </button> */}\r\n         </div>\r\n     )\r\n\r\n }\r\n\r\n\r\n export default Her;","import React, {useState} from \"react\"\nimport ThemeContext from \"./Context/ThemeContext\";\nimport Header from \"./component/Header\";\nimport Her from \"./component/Her\";\n\n\nconst App =()=> {\n  const themeHook =useState(\"light\")\n  return(\n    <ThemeContext.Provider value={themeHook}>\n      <div>\n        <Header></Header>\n        <Her/>\n      </div>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}